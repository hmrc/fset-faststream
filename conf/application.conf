# Copyright 2023 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This is the main configuration file for the application.
# ~~~~~

include "backend.conf"

appName = fset-faststream
play.http.router = prod.Routes
#application.global = config.MicroserviceGlobal
play.i18n.langs = ["en"]
application.session.httpOnly = false
application.session.secure = false

# Json error handler
play.http.errorHandler = "uk.gov.hmrc.play.bootstrap.backend.http.JsonErrorHandler"

# Play Modules
# ~~~~
# Additional play modules can be added here
play.modules.enabled += "uk.gov.hmrc.mongo.play.PlayMongoModule"
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientV2Module"
play.modules.enabled += "play.filters.csrf.CSRFModule"

#Required for object based play2.5 applications
#play.http.requestHandler = "play.api.http.GlobalSettingsHttpRequestHandler"

# Root logger:
//logger.root=ERROR

# Logger used by the framework:
//logger.play=INFO

# Logger provided to your application:
//logger.application=DEBUG

controllers {
    controllers.UserController = {
      needsLogging = false
    }
}

metrics {
    enabled = true
}

# Ensure that the total timeout short so that in situations of failure, the amount of requests outstanding is short
# This is to ensure that the service doesn't get too backlogged when mongo briefly goes down
//play.ws.timeout.request = 10000 //TODO: do we need this?

auditing {
  enabled = true
  consumer {
    baseUri {
      protocol = "http"
    }
  }
}

microservice {
  frameworks {
    yamlFilePath: regions-locations-frameworks.yaml
  }
  schemes {
    yamlFilePath: schemes.yaml
    # "http://localhost:9284" encoded in base 64. We need to encode url in base 64 because config files get confused with urls
    # Used in constructing the urls for sift question guide links when reading schemes.yaml
    candidateFrontendUrl = "aHR0cDovL2xvY2FsaG9zdDo5Mjg0"
  }
  events {
    scheduleFilePath: event-schedule.yaml
    fsacGuideUrl: "https://www.civil-service-careers.gov.uk/fast-stream/fs-how-to-apply/fast-stream-assessment-centre-guide-2/" // This needs to be changed each campaign (also in candidate ui)
    daysBeforeInvitationReminder: 5
    maxNumberOfCandidates = 100 // Max number of candidates eligible for event allocation
  }
  services {
    auth {
      serviceName = faststream26
    }
    email {
      enabled = true
      url = "http://localhost:8300"
    }
    user-management {
      url = "http://localhost:8094"
    }

    test-integration-gateway {
      url = "http://localhost:9299" // The url root for the gateway
      phase1Tests {
        expiryTimeInDays = 7
        gracePeriodInSecs = 300 // The grace period after phase expiry that the candidate is given to complete the tests
        testRegistrationDelayInSecs = 1 // The delay between sending registration requests to PSI for the phase 1 tests
        tests {
          test1 { // Work Based Scenarios
            inventoryId = "940bc1cf-3e8f-44c0-b74d-ffce1ac5b7d7"
            assessmentId = "7c7feb90-81a6-40c9-b832-bed63b2e7f2a"
            reportId = "b88408a2-6c91-4c4a-8e3d-7f46276a37eb"
            normId = "ebae1a7d-932a-4209-a77c-c1ddf663b2e8"
          }
          test2 { // Case Study Assessment
            inventoryId = "60b423e5-75d6-4d31-b02c-97b8686e22e6"
            assessmentId = "1de9e9f5-2400-4bfd-bde6-6577f02a7aad"
            reportId = "78982931-2F72-47E8-BF48-2232AEBA205F"
            normId = "484c3fa9-1b32-48fc-a26a-11a50ce28415"
          }
        }
        standard = [ test1, test2 ]
        gis = [ test1, test2 ]
      }
      phase2Tests {
        expiryTimeInDays = 5
        expiryTimeInDaysForInvigilatedETray = 90
        gracePeriodInSecs = 300 // The grace period after phase expiry that the candidate is given to complete the tests
        testRegistrationDelayInSecs = 1 // The delay between sending registration requests to PSI for the phase 2 tests
        tests {
          test1 { // FS Case Study Assessment - (trial version)
            inventoryId = "60b423e5-75d6-4d31-b02c-97b8686e22e6"
            assessmentId = "1de9e9f5-2400-4bfd-bde6-6577f02a7aad"
            reportId = "78982931-2F72-47E8-BF48-2232AEBA205F"
            normId = "484c3fa9-1b32-48fc-a26a-11a50ce28415"
          }
          test2 { // FS Learning Assessment - (trial version)
            inventoryId = "d2b3262c-2da8-4015-8579-9bebf5c0f53a"
            assessmentId = "9c5bca6a-2a0c-4a36-8e5a-748e80e22b04"
            reportId = "233ef02e-2bb0-4ba1-87d5-fab3e144275c"
            normId = "af7aebe6-ac44-4574-a0cf-e9fe9bb78e81"
          }
        }
        standard = [ test1, test2 ]
      }
      numericalTests {
        gracePeriodInSecs = 300 // The grace period after phase expiry that the candidate is given to complete the entire phase
        tests {
          test1 {
            inventoryId = "9fd36d06-af4b-438f-9956-13bac48c1608"
            assessmentId = "7b920fc7-5604-4619-9fce-a7e5dd06efae"
            reportId = "4bf772e4-0131-4121-9ed7-1f99b9ab0bc8"
            normId = "44f3208b-af7d-4227-9519-7ec46df8a660"
          }
        }
        standard = [ test1 ]
      }

      reportConfig { // TODO: this whole section will change
        xmlReportId = 384
        pdfReportId = 383
        localeCode = "en-GB"
        suppressValidation = true
      }
      candidateAppUrl = "http://localhost:9284" // The url root for redirection urls to candidate dashboard
      emailDomain = "mailinator.com" // TODO: delete this - no longer needed
    }

    launchpad-gateway {
      url = "http://localhost:9296"
      phase3Tests {
        # Note: This expiry figure *must* match configuration in the Launchpad Interview Administration UI
        # or one side will expire before the other does
        timeToExpireInDays = 5
        invigilatedTimeToExpireInDays = 90
        gracePeriodInSecs = 300 // The grace period after phase expiry that the candidate is given to complete the tests
        candidateCompletionRedirectUrl = "http://localhost:9284"
        interviewsByAdjustmentPercentage {
          0pc = 46
          25pc = 67
          33pc = 68
          40pc = 69
          50pc = 70
          75pc = 71
          100pc = 72
        }
        evaluationWaitTimeAfterResultsReceivedInHours = 72
        verifyAllScoresArePresent = true
      }
    }

    disableSdipFaststreamForSift = false
  }
}

scheduling {
  online-testing {
    send-phase1-invitation-job {
      enabled = false
      lockId = "send-phase1-invitation-job-lock-coordinator"
      initialDelaySecs = 30
      intervalSecs = 30
    }
    # Redundant
    send-phase2-invitation-job {
      enabled = false
      lockId = "send-phase2-invitation-job-lock-coordinator"
      initialDelaySecs = 25
      intervalSecs = 31
      batchSize = 50
    }
    # Redundant
    send-phase3-invitation-job {
      enabled = false
      lockId = "send-phase3-invitation-job-lock-coordinator"
      initialDelaySecs = 30
      intervalSecs = 30
      batchSize = 5
    }
    first-phase1-reminder-expiring-test-job {
      enabled = false
      lockId = "first-phase1-reminder-lock-coordinator"
      initialDelaySecs = 30
      intervalSecs = 30
    }
    second-phase1-reminder-expiring-test-job {
      enabled = false
      lockId = "second-phase1-reminder-lock-coordinator"
      initialDelaySecs = 30
      intervalSecs = 30
    }
    # Redundant
    first-phase2-reminder-expiring-test-job {
      enabled = false
      lockId = "first-phase2-reminder-lock-coordinator"
      initialDelaySecs = 31
      intervalSecs = 30
    }
    # Redundant
    second-phase2-reminder-expiring-test-job {
      enabled = false
      lockId = "second-phase2-reminder-lock-coordinator"
      initialDelaySecs = 31
      intervalSecs = 30
    }
    # Redundant
    first-phase3-reminder-expiring-test-job {
      enabled = false
      lockId = "first-phase3-reminder-lock-coordinator"
      initialDelaySecs = 30
      intervalSecs = 30
    }
    # Redundant
    second-phase3-reminder-expiring-test-job {
      enabled = false
      lockId = "second-phase3-reminder-lock-coordinator"
      initialDelaySecs = 30
      intervalSecs = 30
    }
    expiry-phase1-job {
      enabled = false
      lockId = "expiry-phase1-job-lock-coordinator"
      initialDelaySecs = 40
      intervalSecs = 30
    }
    # Redundant
    expiry-phase2-job {
      enabled = false
      lockId = "expiry-phase2-job-lock-coordinator"
      initialDelaySecs = 41
      intervalSecs = 30
    }
    # Redundant
    expiry-phase3-job {
      enabled = false
      lockId = "expiry-phase3-job-lock-coordinator"
      initialDelaySecs = 42
      intervalSecs = 30
    }
    failed-phase1-test-job {
      enabled = false
      lockId = "failed-phase1-test-job-lock-coordinator"
      initialDelaySecs = 30
      intervalSecs = 30
    }
    # Redundant
    failed-phase2-test-job {
      enabled = false
      lockId = "failed-phase2-test-job-lock-coordinator"
      initialDelaySecs = 32
      intervalSecs = 30
    }
    # Redundant
    failed-phase3-test-job {
      enabled = false
      lockId = "failed-phase3-test-job-lock-coordinator"
      initialDelaySecs = 33
      intervalSecs = 30
    }
    # Redundant
    failed-sdip-fs-test-job {
      enabled = false
      lockId = "failed-sdip-fs-test-job-lock-coordinator"
      initialDelaySecs = 36
      intervalSecs = 30
    }
    success-phase1-test-job {
      enabled = false
      lockId = "success-phase1-test-job-lock-coordinator"
      initialDelaySecs = 34
      intervalSecs = 30
    }
    # Redundant
    success-phase3-test-job {
      enabled = false
      lockId = "success-phase3-test-job-lock-coordinator"
      initialDelaySecs = 34
      intervalSecs = 30
    }
    # Redundant
    success-phase3-sdipfs-test-job {
      enabled = false
      lockId = "success-phase3-sdipfs-test-job-lock-coordinator"
      initialDelaySecs = 35
      intervalSecs = 30
    }
    evaluate-phase1-result-job {
      enabled = false
      lockId = "evaluate-phase1-result-job-lock-coordinator"
      initialDelaySecs = 30
      intervalSecs = 30
      batchSize = 10
    }
    # Redundant
    evaluate-phase2-result-job {
      enabled = false
      lockId = "evaluate-phase2-result-job-lock-coordinator"
      initialDelaySecs = 30
      intervalSecs = 30
      batchSize = 10
    }
    # Redundant
    evaluate-phase3-result-job {
      enabled = false
      lockId = "evaluate-phase3-result-job-lock-coordinator"
      initialDelaySecs = 30
      intervalSecs = 30
      batchSize = 10
    }
    # Redundant
    progress-sdipFs-candidate-for-sdip-job {
      enabled = false
      lockId = "progress-sdipFs-candidate-for-sdip-job-lock-coordinator",
      initialDelaySecs = 30
      intervalSecs = 30
    }
    # Redundant
    fixer-job {
      enabled = false
      lockId = "fixer-job-lock-coordinator"
      initialDelaySecs = 45
      intervalSecs = 600
      batchSize = 10
    }
    # Skips phase2 and phase3 tests and replaces skip-phase3-job
    skip-phases-job {
      enabled = false
      lockId = "skip-phases-job-lock-coordinator"
      initialDelaySecs = 30
      intervalSecs = 30,
      batchSize = 5
    }
    # Redundant
    skip-phase3-job {
      enabled = false
      lockId = "skip-phase3-job-lock-coordinator"
      initialDelaySecs = 30
      intervalSecs = 30,
      batchSize = 5
    }
    # Redundant
    fix-sdipfs-p3-skipped-candidates-job {
      enabled = false
      lockId = "fix-sdipfs-p3-skipped-candidates-job-lock-coordinator"
      initialDelaySecs = 30
      intervalSecs = 60,
      batchSize = 5
    }
    locations-and-venues {
      yamlFilePath = locations-and-venues.yaml
    }
  }
  progress-to-sift-job {
    enabled = false
    lockId = "progress-to-sift-job-lock-coordinator"
    initialDelaySecs = 30
    intervalSecs = 30
  }
  # Redundant
  sift-numerical-test-invitation-job {
    enabled = false
    lockId = "sift-numerical-test-invitation-job-lock-coordinator"
    initialDelaySecs = 30
    intervalSecs = 30
    batchSize = 20
  }
  sift-first-reminder-job {
    enabled = false
    lockId = "sift-first-reminder-job-lock-coordinator"
    initialDelaySecs = 30
    intervalSecs = 30
  }
  sift-second-reminder-job {
    enabled = false
    lockId = "sift-second-reminder-job-lock-coordinator"
    initialDelaySecs = 30
    intervalSecs = 30
  }
  # Redundant
  process-sift-numerical-results-received-job {
    enabled = false
    lockId = "process-sift-numerical-results-received-job-lock-coordinator"
    initialDelaySecs = 30
    intervalSecs = 30
    waitSecs = 5
  }
  sift-failure-job {
    enabled = false
    lockId = "sift-failure-job-lock-coordinator"
    initialDelaySecs = 30
    intervalSecs = 30
  }
  sift-expiry-job {
    enabled = false
    lockId = "sift-expiry-job-lock-coordinator"
    initialDelaySecs = 30
    intervalSecs = 30
  }
  progress-to-assessment-centre-job {
    enabled = false
    lockId = "progress-to-assessment-centre-job-lock-coordinator"
    initialDelaySecs = 30
    intervalSecs = 30
  }
  progress-to-fsb-or-offer-job {
    enabled = false
    batchSize = 20
    lockId = "progress-to-fsb-or-offer-job-lock-coordinator"
    initialDelaySecs = 30
    intervalSecs = 30
  }
  confirm-attendance-reminder-job {
    enabled = false
    lockId = "confirm-attendance-reminder-job-coordinator"
    initialDelaySecs = 30
    intervalSecs = 300
  }
  evaluate-assessment-centre-job {
    enabled = false
    lockId = "evaluate-assessment-center-job-lock-coordinator"
    initialDelaySecs = 30
    intervalSecs = 30
    batchSize = 10
  }
  notify-assessment-centre-passed-or-failed-job {
    enabled = false
    lockId = "notify-assessment-centre-passed-or-failed-job-lock-coordinator"
    initialDelaySecs = 30
    intervalSecs = 30
  }
  notify-assessors-of-new-events-job {
    enabled = false
    lockId = "notify-assessors-of-new-events-job-lock-coordinator"
    initialDelaySecs = 30
    intervalSecs = 3600
  }
  remind-candidate-event-allocated {
    enabled = false
    lockId = "remind-candidate-event-allocated-job-lock-coordinator"
    initialDelaySecs = 30
    intervalSecs = 30
  }
  evaluate-fsb-job {
    enabled = false
    lockId = "evaluate-fsb-job-lock-coordinator"
    initialDelaySecs = 30
    intervalSecs = 30
  }
  fsb-overall-failure-job {
    enabled = false
    lockId = "fsb-overall-failure-job"
    initialDelaySecs = 30
    intervalSecs = 30
  }
  notify-on-final-failure-job {
    enabled = false
    lockId = "notify-on-final-failure-coordinator"
    initialDelaySecs = 30
    intervalSecs = 30
  }
  notify-on-final-success-job {
    enabled = false
    lockId = "notify-on-final-success-coordinator"
    initialDelaySecs = 30
    intervalSecs = 30
  }
}

mongodb {
  failoverStrategy {
    initialDelayMsecs = 500
    retries = 4
    delay {
      factor = 0.5
      function = linear
    }
  }
  uri = "mongodb://localhost:27017/fset-faststream"
}

maxNumberOfDocuments = 10

# Suppress these messages: [INFO] [01/28/2020 13:02:06.547] [reactivemongo-akka.actor.default-dispatcher-2] [akka://reactivemongo/user/Connection-1] Message [reactivemongo.core.actors.ChannelDisconnected] without sender to Actor[akka://reactivemongo/user/Connection-1#-1075960923] was not delivered. [1] dead letters encountered. If this is not an expected behavior, then [Actor[akka://reactivemongo/user/Connection-1#-1075960923]] may have terminated unexpectedly, This logging can be turned off or adjusted with configuration settings 'akka.log-dead-letters' and 'akka.log-dead-letters-during-shutdown'.
#mongo-async-driver {
#  akka {
#    loglevel = WARNING
#  }
#}
