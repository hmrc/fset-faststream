# Copyright 2016 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This is the main configuration file for the application.
# ~~~~~

include "services.conf"

appName=fset-faststream
application.router=prod.Routes
application.global=config.MicroserviceGlobal
application.langs="en"
application.secret="nVXesXUo1SO9GsQNPeDV8EumUsNLCqdvQmZ9X6lVXy2Y5Z43iu55KWUm3bZ3dO98"
application.session.httpOnly=false
application.session.secure=false

# Root logger:
logger.root=ERROR

# Logger used by the framework:
logger.play=INFO

# Logger provided to your application:
logger.application=DEBUG

controllers {
    com.kenshoo.play.metrics.MetricsController = {
      needsAuth = false
      needsLogging = false
    }

    controllers.UserController = {
      needsAuth = false
      needsLogging = false
    }
}

metrics {
    name = ${appName}
    rateUnit = SECONDS
    durationUnit = SECONDS
    showSamples = true
    jvm = true
    enabled = true
}

# Ensure that the total timeout short so that in situations of failure, the amount of requests outstanding is short
# This is to ensure that the service doesn't get too backlogged when mongo briefly goes down
ws.timeout.request = 10000

auditing {
  enabled = true
  traceRequests = true
  consumer {
    baseUri {
      host = localhost
      port = 8100
    }
  }
}

microservice {
  frameworks {
    yamlFilePath: regions-locations-frameworks.yaml
  }
  metrics {
    graphite {
      host = graphite
      port = 2003
      prefix = play.${appName}.
      enabled = false
    }
  }
  services {
    email {
      url = "http://localhost:9285"
    }
    user-management {
      url = "http://localhost:8094"
    }
    cubiks-gateway {
      url = "http://localhost:9288"
      onlineTestConfig = {
        phaseName = "phase1"
        expiryTimeInDays = 7
        scheduleIds = {
          sjq : 16196
          bq : 16194
        }

        standard = [ sjq, bq ]
        gis = [ sqj ]
      }

      verbalAndNumericalAssessment {
        assessmentId = 132
        normId = 907000310
        verbalSectionId = 1
        verbalTimeInMinutesMinimum = 6
        verbalTimeInMinutesMaximum = 12
        numericalSectionId = 2
        numericalTimeInMinutesMinimum = 6
        numericalTimeInMinutesMaximum = 12
      }
      competenceAssessment {
        assessmentId = 127
        normId = 907000263
      }
      situationalAssessment {
        assessmentId = 131
        normId = 907000311
      }
      reportConfig {
        xmlReportId = 384
        pdfReportId = 383
        localeCode = "en-GB"
        suppressValidation = true
      }
      candidateAppUrl = "http://localhost:9284"
      emailDomain = "mailinator.com"
    }
    assessment-evaluation {
      minimum-competency-level {
        enabled = true
        minimumCompetencyLevelScore = 2.0
        motivationalFitMinimumCompetencyLevelScore = 4.0
      }
    }
  }
}

scheduling {
  online-testing {
    send-invitation-job {
      enabled = true
      lockId = "send-invitation-job-lock-coordinator"
      initialDelaySecs = 30
      intervalSecs = 30
    }
    expiry-job {
      enabled = false
      lockId = "expiry-job-lock-coordinator"
      initialDelaySecs = 30
      intervalSecs = 30
    }
    failed-test-job {
      enabled = false
      lockId = "failed-test-job-lock-coordinator"
      initialDelaySecs = 30
      intervalSecs = 30
    }
    retrieve-results-job {
      enabled = false
      lockId = "retrieve-results-job-lock-coordinator"
      initialDelaySecs = 30
      intervalSecs = 30
      waitSecs = 5
    }
    evaluate-candidate-score-job {
      enabled = false
      lockId = "evaluate-candidate-score-job-lock-coordinator"
      initialDelaySecs = 30
      intervalSecs = 30
    }
    assessment-centres-locations {
      yamlFilePath = assessment-centres-preferred-locations.yaml
    }
    assessment-centres {
      yamlFilePath = assessment-centres.yaml
    }
  }
  diversity-monitoring-job {
    enabled = false
    lockId = "diversity-monitoring-job-lock-coordinator"
    initialDelaySecs = 5
    intervalSecs = 300
    forceStopActorsSecs = 170
  }
  confirm-attendance-reminder-job {
    enabled = false
    lockId = "confirm-attendance-reminder-job-coordinator"
    initialDelaySecs = 30
    intervalSecs = 300
  }
  evaluate-assessment-score-job {
    enabled = false
    lockId = "evaluate-assessment-score-job-lock-coordinator"
    initialDelaySecs = 30
    intervalSecs = 30
  }
  notify-assessment-centre-passed-or-failed-job {
    enabled = false
    lockId = "notify-assessment-centre-passed-or-failed-job-lock-coordinator"
    initialDelaySecs = 30
    intervalSecs = 30
  }
}

mongodb {
  failoverStrategy {
    initialDelayMsecs = 500
    retries = 4
    delay {
      factor = 0.5
      function = linear
    }
  }
  uri = "mongodb://localhost:27017/fset-faststream"
}


maxNumberOfDocuments = 10


